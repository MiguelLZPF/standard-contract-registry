/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExampleOwnerV2,
  ExampleOwnerV2Interface,
} from "../ExampleOwnerV2";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newFunction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546201000033810262010000600160b01b0319909216919091178083556040519190046001600160a01b031691907f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a735908290a36101c1806100766000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631b28d63e14610046578063893d20e814610059578063a6f9dae114610083575b600080fd5b6040514281526020015b60405180910390f35b6000546201000090046001600160a01b03166040516001600160a01b039091168152602001610050565b61009661009136600461015b565b610098565b005b6000546201000090046001600160a01b031633146100f25760405162461bcd60e51b815260206004820152601360248201527221b0b63632b91034b9903737ba1037bbb732b960691b604482015260640160405180910390fd5b600080546040516001600160a01b03808516936201000090930416917f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73591a3600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b60006020828403121561016d57600080fd5b81356001600160a01b038116811461018457600080fd5b939250505056fea2646970667358221220b95e06e5c1a63341cae8d2717f3f2b5c2a9b13496f72cc220fa0275737739bc364736f6c634300080d0033";

type ExampleOwnerV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleOwnerV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleOwnerV2__factory extends ContractFactory {
  constructor(...args: ExampleOwnerV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ExampleOwnerV2";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExampleOwnerV2> {
    return super.deploy(overrides || {}) as Promise<ExampleOwnerV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExampleOwnerV2 {
    return super.attach(address) as ExampleOwnerV2;
  }
  connect(signer: Signer): ExampleOwnerV2__factory {
    return super.connect(signer) as ExampleOwnerV2__factory;
  }
  static readonly contractName: "ExampleOwnerV2";
  public readonly contractName: "ExampleOwnerV2";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleOwnerV2Interface {
    return new utils.Interface(_abi) as ExampleOwnerV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExampleOwnerV2 {
    return new Contract(address, _abi, signerOrProvider) as ExampleOwnerV2;
  }
}
