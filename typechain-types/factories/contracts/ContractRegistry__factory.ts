/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ContractRegistry,
  ContractRegistryInterface,
} from "../../contracts/ContractRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICodeTrust",
        name: "initCodeTrust",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "version",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "logicCodeHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oldAdmin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "logic",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "version",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "logicCodeHash",
        type: "bytes32",
      },
    ],
    name: "NewRecord",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeRegisteredAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyRecords",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "latestRecords",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "version",
        type: "uint16",
      },
    ],
    name: "getProxyAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "version",
        type: "uint16",
      },
    ],
    name: "getRecord",
    outputs: [
      {
        internalType: "bool",
        name: "found",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "name",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "proxy",
            type: "address",
          },
          {
            internalType: "address",
            name: "logic",
            type: "address",
          },
          {
            internalType: "address",
            name: "admin",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "version",
            type: "uint16",
          },
          {
            internalType: "bytes32",
            name: "logicCodeHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct ContractRecord",
        name: "record",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSystemRecords",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "latestRecords",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "logic",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "version",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "logicCodeHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "logic",
        type: "address",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "version",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "logicCodeHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200195738038062001957833981016040819052620000349162000460565b6200003f3362000091565b600180546001600160a01b0319166001600160a01b0386161790558262000077576f436f6e7472616374526567697374727960801b92505b62000087833080858533620000e1565b50505050620004bf565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0384166200013d5760405162461bcd60e51b815260206004820152601760248201527f4c6f6769632061646472657373206973206e656464656400000000000000000060448201526064015b60405180910390fd5b6001600160a01b03851662000150578394505b61270f61ffff84161115620001a85760405162461bcd60e51b815260206004820152601f60248201527f56657273696f6e206d757374206265206c6f776572207468616e203939393900604482015260640162000134565b6001600160a01b0381166000908152600360209081526040808320600283528184208a855283528184208184528285205461ffff16855290925290912060058101541580156200020557506003810154600160a01b900461ffff16155b620002535760405162461bcd60e51b815260206004820152601e60248201527f416c726561647920726567697374657265642c20757365207570646174650000604482015260640162000134565b60026000846001600160a01b03166001600160a01b03168152602001908152602001600020600089815260200190815260200160002060008661ffff1661ffff1681526020019081526020016000209050878160000181905550868160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550858160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550828160030160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550848160030160146101000a81548161ffff021916908361ffff16021790555083816004018190555042816005018190555081600201548260010160008a815260200190815260200160002081905550878260020181905550848260000160008a815260200190815260200160002060006101000a81548161ffff021916908361ffff1602179055508060030160149054906101000a900461ffff1661ffff168160010160009054906101000a90046001600160a01b03166001600160a01b031682600001547fb8064287be8e96c6334f8cff70015f26aa567834bc9455bdc54f6d163a1013768460020160009054906101000a90046001600160a01b031685600401546040516200044e9291906001600160a01b03929092168252602082015260400190565b60405180910390a45050505050505050565b600080600080608085870312156200047757600080fd5b84516001600160a01b03811681146200048f57600080fd5b60208601516040870151919550935061ffff81168114620004af57600080fd5b6060959095015193969295505050565b61148880620004cf6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610116578063ccd92b4814610127578063e76637ce146101a8578063f2fde38b146101bd578063ff69bc33146101d057600080fd5b8063116cce86146100a357806340a40e9d146100b85780634200191c146100cb578063715018a6146100fb578063842f95f014610103575b600080fd5b6100b66100b136600461120a565b6101d8565b005b6100b66100c6366004611270565b6102eb565b6100de6100d93660046112e8565b6103fb565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b6610433565b6100b6610111366004611324565b610447565b6000546001600160a01b03166100de565b61013a6101353660046112e8565b61063f565b60408051921515835281516020808501919091528201516001600160a01b03908116848301529082015181166060808501919091528201511660808084019190915281015161ffff1660a08084019190915281015160c080840191909152015160e0820152610100016100f2565b6101b061068f565b6040516100f29190611350565b6100b66101cb366004611394565b6106a4565b6101b061071d565b6001600160a01b0381166101e95750335b6001600160a01b03811633148061028457506001546001600160a01b03166312cc9d42336040516001600160e01b031960e084901b1681526001600160a01b039182166004820152908416602482015260006044820152606401602060405180830381865afa158015610260573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028491906113af565b6102d55760405162461bcd60e51b815260206004820152601b60248201527f43616c6c2066726f6d20756e747275737465642061646472657373000000000060448201526064015b60405180910390fd5b6102e3868686868686610734565b505050505050565b6001600160a01b0381166102fc5750335b6001600160a01b03811633148061039757506001546001600160a01b03166312cc9d42336040516001600160e01b031960e084901b1681526001600160a01b039182166004820152908416602482015260006044820152606401602060405180830381865afa158015610373573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039791906113af565b6103e35760405162461bcd60e51b815260206004820152601b60248201527f43616c6c2066726f6d20756e747275737465642061646472657373000000000060448201526064016102cc565b6103f287878787878787610aa6565b50505050505050565b600080600061040b868686610e07565b915091508161041f5760009250505061042c565b60200151915061042c9050565b9392505050565b61043b610f1f565b6104456000610f79565b565b336001600160a01b038216158015906104725750806001600160a01b0316826001600160a01b031614155b6104b25760405162461bcd60e51b815260206004820152601160248201527024b73b30b634b2103732bb9030b236b4b760791b60448201526064016102cc565b6001600160a01b03811660009081526003602090815260408083206002835281842087855283528184208184528285205461ffff168552909252822060058101549192909190036105455760405162461bcd60e51b815260206004820152601e60248201527f436f6e7472616374207265636f7264206e6f742072656769737465726564000060448201526064016102cc565b8054600182015460028301546003840154600485015461058094936001600160a01b03908116931691600160a01b900461ffff169089610734565b61058a8286610fc9565b6001600160a01b0383811660008181526002602081815260408084208b855282528084208883528185205461ffff16855282528084208481556001810180546001600160a01b031990811690915593810180549094169093556003830180546001600160b01b03191690556004830184905560059092019290925551888152928716927f6467ef979e83be7da4c6bdb4513ae6309dbf5cd9ca8f5474d2f77ef171f5b903910160405180910390a35050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101829052610682858585610e07565b915091505b935093915050565b606061069f33611095565b611095565b905090565b6106ac610f1f565b6001600160a01b0381166107115760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102cc565b61071a81610f79565b50565b606061069f61069a6000546001600160a01b031690565b6001600160a01b03841661078a5760405162461bcd60e51b815260206004820152601760248201527f4c6f6769632061646472657373206973206e656464656400000000000000000060448201526064016102cc565b6001600160a01b03851661079c578394505b61270f61ffff841611156107f25760405162461bcd60e51b815260206004820152601f60248201527f56657273696f6e206d757374206265206c6f776572207468616e20393939390060448201526064016102cc565b6001600160a01b0381166000908152600360209081526040808320600283528184208a855283528184208184528285205461ffff168552909252909120600581015415801561084e57506003810154600160a01b900461ffff16155b61089a5760405162461bcd60e51b815260206004820152601e60248201527f416c726561647920726567697374657265642c2075736520757064617465000060448201526064016102cc565b60026000846001600160a01b03166001600160a01b03168152602001908152602001600020600089815260200190815260200160002060008661ffff1661ffff1681526020019081526020016000209050878160000181905550868160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550858160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550828160030160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550848160030160146101000a81548161ffff021916908361ffff16021790555083816004018190555042816005018190555081600201548260010160008a815260200190815260200160002081905550878260020181905550848260000160008a815260200190815260200160002060006101000a81548161ffff021916908361ffff1602179055508060030160149054906101000a900461ffff1661ffff168160010160009054906101000a90046001600160a01b03166001600160a01b031682600001547fb8064287be8e96c6334f8cff70015f26aa567834bc9455bdc54f6d163a1013768460020160009054906101000a90046001600160a01b03168560040154604051610a949291906001600160a01b03929092168252602082015260400190565b60405180910390a45050505050505050565b86610ae85760405162461bcd60e51b8152602060048201526012602482015271149958dbdc99081b985b59481b995959195960721b60448201526064016102cc565b6001600160a01b0381166000908152600360209081526040808320600283528184208b855283528184208184528285205461ffff16855290925282206005810154919290919003610b7b5760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420726567697374657265642c207573652072656769737465720000000060448201526064016102cc565b8461ffff16600003610ba5576003810154610ba290600160a01b900461ffff1660016113e7565b94505b600381015461ffff808716600160a01b9092041610610bfc5760405162461bcd60e51b815260206004820152601360248201527224b73b30b634b2103732bb903b32b939b4b7b760691b60448201526064016102cc565b6001600160a01b0380841660009081526002602090815260408083208d8452825280832061ffff8a168452909152902090891615610c56576001810180546001600160a01b0319166001600160a01b038b16179055610c7d565b60018083015490820180546001600160a01b0319166001600160a01b039092169190911790555b6001600160a01b03881615610cae576002810180546001600160a01b0319166001600160a01b038a16179055610cd5565b60028083015490820180546001600160a01b0319166001600160a01b039092169190911790555b6001600160a01b03871615610d06576003810180546001600160a01b0319166001600160a01b038916179055610d2d565b60038083015490820180546001600160a01b0319166001600160a01b039092169190911790555b8415610d3f5760048101859055610d4a565b600480830154908201555b8154815560038101805461ffff60a01b1916600160a01b61ffff89811682029290921780845542600586015560008e81526020888152604091829020805493859004861661ffff19909416939093179092559354600186015486546002880154600489015488516001600160a01b0392831681529586015294909204909416949290931692917fb8064287be8e96c6334f8cff70015f26aa567834bc9455bdc54f6d163a101376910160405180910390a450505050505050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905261270f61ffff84161115610e78576001600160a01b038416600090815260036020908152604080832088845290915290205461ffff1692505b506001600160a01b038084166000908152600260208181526040808420898552825280842061ffff8089168652908352818520825160e0810184528154815260018201548816948101949094529384015486169183019190915260038301549485166060830152600160a01b9094049093166080840152600481015460a08401526005015460c083018190529003610f135760009150610687565b60019150935093915050565b6000546001600160a01b031633146104455760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102cc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60028201546000818152600184016020526040902054610fff575060009081526001820160205260408120819055600290910155565b6000818152600184016020526040902054821461107957806110635760405162461bcd60e51b815260206004820152601f60248201527f5265636f72644e616d65206e6f7420666f756e6420666f722073656e6465720060448201526064016102cc565b6000908152600183016020526040902054610fff565b6000918252600192909201602052604080822054928252902055565b6001600160a01b0381166000908152600360205260408120600201546060915b81158015906110c5575061271081105b1561110857806110d48161140d565b6001600160a01b03861660009081526003602090815260408083209683526001909601905293909320549291506110b59050565b6001600160a01b03841660009081526003602052604081206002015492508167ffffffffffffffff81111561113f5761113f611426565b604051908082528060200260200182016040528015611168578160200160208202803683370190505b50905060005b828110156111d357838282815181106111895761118961143c565b6020908102919091018101919091526001600160a01b03871660009081526003825260408082209682526001909601909152939093205492806111cb8161140d565b91505061116e565b50949350505050565b80356001600160a01b03811681146111f357600080fd5b919050565b803561ffff811681146111f357600080fd5b60008060008060008060c0878903121561122357600080fd5b86359550611233602088016111dc565b9450611241604088016111dc565b935061124f606088016111f8565b92506080870135915061126460a088016111dc565b90509295509295509295565b600080600080600080600060e0888a03121561128b57600080fd5b8735965061129b602089016111dc565b95506112a9604089016111dc565b94506112b7606089016111dc565b93506112c5608089016111f8565b925060a088013591506112da60c089016111dc565b905092959891949750929550565b6000806000606084860312156112fd57600080fd5b8335925061130d602085016111dc565b915061131b604085016111f8565b90509250925092565b6000806040838503121561133757600080fd5b82359150611347602084016111dc565b90509250929050565b6020808252825182820181905260009190848201906040850190845b818110156113885783518352928401929184019160010161136c565b50909695505050505050565b6000602082840312156113a657600080fd5b61042c826111dc565b6000602082840312156113c157600080fd5b8151801515811461042c57600080fd5b634e487b7160e01b600052601160045260246000fd5b600061ffff808316818516808303821115611404576114046113d1565b01949350505050565b60006001820161141f5761141f6113d1565b5060010190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea26469706673582212209f9e5be2cbd9a019c9398f1dd88b8417fe5e21c83f138e2106d8944c94e7be2064736f6c634300080e0033";

type ContractRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractRegistry__factory extends ContractFactory {
  constructor(...args: ContractRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initCodeTrust: PromiseOrValue<string>,
    name: PromiseOrValue<BytesLike>,
    version: PromiseOrValue<BigNumberish>,
    logicCodeHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractRegistry> {
    return super.deploy(
      initCodeTrust,
      name,
      version,
      logicCodeHash,
      overrides || {}
    ) as Promise<ContractRegistry>;
  }
  override getDeployTransaction(
    initCodeTrust: PromiseOrValue<string>,
    name: PromiseOrValue<BytesLike>,
    version: PromiseOrValue<BigNumberish>,
    logicCodeHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initCodeTrust,
      name,
      version,
      logicCodeHash,
      overrides || {}
    );
  }
  override attach(address: string): ContractRegistry {
    return super.attach(address) as ContractRegistry;
  }
  override connect(signer: Signer): ContractRegistry__factory {
    return super.connect(signer) as ContractRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractRegistryInterface {
    return new utils.Interface(_abi) as ContractRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractRegistry {
    return new Contract(address, _abi, signerOrProvider) as ContractRegistry;
  }
}
