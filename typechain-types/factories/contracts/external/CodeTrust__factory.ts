/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CodeTrust,
  CodeTrustInterface,
} from "../../../contracts/external/CodeTrust";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "by",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "extTimestamp",
        type: "uint256",
      },
    ],
    name: "isTrusted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedContract",
        type: "address",
      },
    ],
    name: "revokeTrustAt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "trustCodeAt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061032c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806312cc9d42146100465780634fcb18831461006d578063920517e614610082575b600080fd5b61005961005436600461024f565b610095565b604051901515815260200160405180910390f35b61008061007b36600461028b565b610102565b005b6100806100903660046102a6565b61019c565b6000816000036100a3574291505b6001600160a01b0383166100b5573392505b6001600160a01b03808416600090815260208181526040808320938816835292905220546100e48360056102d0565b8111156100f55760019150506100fb565b60009150505b9392505050565b336000908152602081815260408083206001600160a01b038516845290915290205461012f4260056102d0565b81116101745760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e48195e1c1a5c9959608a1b60448201526064015b60405180910390fd5b50336000908152602081815260408083206001600160a01b0394909416835292905290812055565b600a81101580156101b157506301e133808111155b6101fd5760405162461bcd60e51b815260206004820152601c60248201527f496e76616c6964206475726174696f6e2c20636865636b20446f637300000000604482015260640161016b565b61020781426102d0565b336000908152602081815260408083206001600160a01b03969096168352949052929092209190915550565b80356001600160a01b038116811461024a57600080fd5b919050565b60008060006060848603121561026457600080fd5b61026d84610233565b925061027b60208501610233565b9150604084013590509250925092565b60006020828403121561029d57600080fd5b6100fb82610233565b600080604083850312156102b957600080fd5b6102c283610233565b946020939093013593505050565b600082198211156102f157634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220376baa61caf3b14d9508ee6e59f411d22af9137eb15520ffba869dc6f3d771a564736f6c634300080e0033";

type CodeTrustConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CodeTrustConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CodeTrust__factory extends ContractFactory {
  constructor(...args: CodeTrustConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CodeTrust> {
    return super.deploy(overrides || {}) as Promise<CodeTrust>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CodeTrust {
    return super.attach(address) as CodeTrust;
  }
  override connect(signer: Signer): CodeTrust__factory {
    return super.connect(signer) as CodeTrust__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CodeTrustInterface {
    return new utils.Interface(_abi) as CodeTrustInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CodeTrust {
    return new Contract(address, _abi, signerOrProvider) as CodeTrust;
  }
}
