/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ContractDeployer,
  ContractDeployerInterface,
} from "../../contracts/ContractDeployer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IContractRegistry",
        name: "initRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "registry",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proxyOrLogic",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "version",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "logicCodeHash",
        type: "bytes32",
      },
    ],
    name: "ContractDeployed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IContractRegistry",
        name: "registry",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "version",
        type: "uint16",
      },
    ],
    name: "deployContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107bf3803806107bf83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61072c806100936000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633aa3df6c14610030575b600080fd5b61004361003e36600461053c565b610045565b005b6001600160a01b038616610062576000546001600160a01b031695505b858361009457854260405160200161007b929190610614565b6040516020818303038152906040528051906020012093505b60006100c360008689896040516020016100af92919061062d565b604051602081830303815290604052610336565b90506000816001600160a01b0316803b806020016040519081016040528181526000908060200190933c805160209091012060405163f2fde38b60e01b81523360048201529091506001600160a01b0383169063f2fde38b90602401600060405180830381600087803b15801561013957600080fd5b505af192505050801561014a575060015b5060405163199b256960e31b81526004810186905233602482015261271060448201526000906001600160a01b038b169063ccd92b489060640161010060405180830381865afa1580156101a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c69190610642565b509050801561025b576040516340a40e9d60e01b8152600481018790526001600160a01b03848116602483018190526044830152336064830181905261ffff8816608484015260a4830185905260c48301528b16906340a40e9d9060e401600060405180830381600087803b15801561023e57600080fd5b505af1158015610252573d6000803e3d6000fd5b505050506102dc565b6040516308b6674360e11b8152600481018790526001600160a01b0384811660248301819052604483015261ffff87166064830152608482018490523360a48301528b169063116cce869060c401600060405180830381600087803b1580156102c357600080fd5b505af11580156102d7573d6000803e3d6000fd5b505050505b604080516001600160a01b0386811682526020820185905261ffff8816929086169189917e60efd136254ce44bc32bb474aa1526e3a1ac84c0d4473c0b3fb4407c5b747a910160405180910390a450505050505050505050565b6000808447101561038e5760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b82516000036103df5760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401610385565b8383516020850187f590506001600160a01b0381166104405760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606401610385565b949350505050565b6001600160a01b038116811461045d57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff8111828210171561049957610499610460565b60405290565b600082601f8301126104b057600080fd5b813567ffffffffffffffff808211156104cb576104cb610460565b604051601f8301601f19908116603f011681019082821181831017156104f3576104f3610460565b8160405283815286602085880101111561050c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b61ffff8116811461045d57600080fd5b60008060008060008060c0878903121561055557600080fd5b863561056081610448565b9550602087013567ffffffffffffffff8082111561057d57600080fd5b6105898a838b0161049f565b9650604089013591508082111561059f57600080fd5b506105ac89828a0161049f565b945050606087013592506080870135915060a08701356105cb8161052c565b809150509295509295509295565b6000815160005b818110156105fa57602081850181015186830152016105e0565b81811115610609576000828601525b509290920192915050565b600061062082856105d9565b9283525050602001919050565b600061044061063c83866105d9565b846105d9565b60008082840361010081121561065757600080fd5b8351801515811461066757600080fd5b925060e0601f198201121561067b57600080fd5b50610684610476565b60208401518152604084015161069981610448565b602082015260608401516106ac81610448565b604082015260808401516106bf81610448565b606082015260a08401516106d28161052c565b608082015260c08481015160a083015260e09094015193810193909352509290915056fea26469706673582212206d032ae4ab59006e472f2b74878515d484f65e9141f99d19d40f9ad6d1947d7164736f6c634300080e0033";

type ContractDeployerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractDeployerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractDeployer__factory extends ContractFactory {
  constructor(...args: ContractDeployerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractDeployer> {
    return super.deploy(
      initRegistry,
      overrides || {}
    ) as Promise<ContractDeployer>;
  }
  override getDeployTransaction(
    initRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initRegistry, overrides || {});
  }
  override attach(address: string): ContractDeployer {
    return super.attach(address) as ContractDeployer;
  }
  override connect(signer: Signer): ContractDeployer__factory {
    return super.connect(signer) as ContractDeployer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractDeployerInterface {
    return new utils.Interface(_abi) as ContractDeployerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractDeployer {
    return new Contract(address, _abi, signerOrProvider) as ContractDeployer;
  }
}
