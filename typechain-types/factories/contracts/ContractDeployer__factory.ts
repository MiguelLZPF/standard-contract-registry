/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ContractDeployer,
  ContractDeployerInterface,
} from "../../contracts/ContractDeployer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IContractRegistry",
        name: "initRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "registry",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proxyOrLogic",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "version",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "logicCodeHash",
        type: "bytes32",
      },
    ],
    name: "ContractDeployed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IContractRegistry",
        name: "registry",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "version",
        type: "uint16",
      },
    ],
    name: "deployContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162000eb938038062000eb9833981810160405281019061003491906100ef565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100aa8261007f565b9050919050565b60006100bc8261009f565b9050919050565b6100cc816100b1565b81146100d757600080fd5b50565b6000815190506100e9816100c3565b92915050565b6000602082840312156101055761010461007a565b5b6000610113848285016100da565b91505092915050565b610d8d806200012c6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633aa3df6c14610030575b600080fd5b61004a600480360381019061004591906106db565b61004c565b005b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16036100a45760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1695505b60008690506000801b84036100df5785426040516020016100c6929190610845565b6040516020818303038152906040528051906020012093505b600061010e60008689896040516020016100fa92919061086d565b604051602081830303815290604052610392565b905060008173ffffffffffffffffffffffffffffffffffffffff16803b806020016040519081016040528181526000908060200190933c8051906020012090508173ffffffffffffffffffffffffffffffffffffffff1663f2fde38b336040518263ffffffff1660e01b815260040161018791906108a0565b600060405180830381600087803b1580156101a157600080fd5b505af19250505080156101b2575060015b5060008973ffffffffffffffffffffffffffffffffffffffff1663ccd92b4887336127106040518463ffffffff1660e01b81526004016101f49392919061090f565b61010060405180830381865afa158015610212573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102369190610ab9565b50905080156102bb578973ffffffffffffffffffffffffffffffffffffffff166340a40e9d878586338a88336040518863ffffffff1660e01b81526004016102849796959493929190610b09565b600060405180830381600087803b15801561029e57600080fd5b505af11580156102b2573d6000803e3d6000fd5b50505050610331565b8973ffffffffffffffffffffffffffffffffffffffff1663116cce868785868987336040518763ffffffff1660e01b81526004016102fe96959493929190610b78565b600060405180830381600087803b15801561031857600080fd5b505af115801561032c573d6000803e3d6000fd5b505050505b8461ffff168373ffffffffffffffffffffffffffffffffffffffff16877e60efd136254ce44bc32bb474aa1526e3a1ac84c0d4473c0b3fb4407c5b747a878660405161037e929190610bd9565b60405180910390a450505050505050505050565b600080844710156103d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cf90610c5f565b60405180910390fd5b600083510361041c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041390610ccb565b60405180910390fd5b8383516020850187f59050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048d90610d37565b60405180910390fd5b809150509392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104e0826104b5565b9050919050565b60006104f2826104d5565b9050919050565b610502816104e7565b811461050d57600080fd5b50565b60008135905061051f816104f9565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105788261052f565b810181811067ffffffffffffffff8211171561059757610596610540565b5b80604052505050565b60006105aa6104a1565b90506105b6828261056f565b919050565b600067ffffffffffffffff8211156105d6576105d5610540565b5b6105df8261052f565b9050602081019050919050565b82818337600083830152505050565b600061060e610609846105bb565b6105a0565b90508281526020810184848401111561062a5761062961052a565b5b6106358482856105ec565b509392505050565b600082601f83011261065257610651610525565b5b81356106628482602086016105fb565b91505092915050565b6000819050919050565b61067e8161066b565b811461068957600080fd5b50565b60008135905061069b81610675565b92915050565b600061ffff82169050919050565b6106b8816106a1565b81146106c357600080fd5b50565b6000813590506106d5816106af565b92915050565b60008060008060008060c087890312156106f8576106f76104ab565b5b600061070689828a01610510565b965050602087013567ffffffffffffffff811115610727576107266104b0565b5b61073389828a0161063d565b955050604087013567ffffffffffffffff811115610754576107536104b0565b5b61076089828a0161063d565b945050606061077189828a0161068c565b935050608061078289828a0161068c565b92505060a061079389828a016106c6565b9150509295509295509295565b600081519050919050565b600081905092915050565b60005b838110156107d45780820151818401526020810190506107b9565b838111156107e3576000848401525b50505050565b60006107f4826107a0565b6107fe81856107ab565b935061080e8185602086016107b6565b80840191505092915050565b6000819050919050565b6000819050919050565b61083f61083a8261081a565b610824565b82525050565b600061085182856107e9565b915061085d828461082e565b6020820191508190509392505050565b600061087982856107e9565b915061088582846107e9565b91508190509392505050565b61089a816104d5565b82525050565b60006020820190506108b56000830184610891565b92915050565b6108c48161066b565b82525050565b6000819050919050565b6000819050919050565b60006108f96108f46108ef846108ca565b6108d4565b6106a1565b9050919050565b610909816108de565b82525050565b600060608201905061092460008301866108bb565b6109316020830185610891565b61093e6040830184610900565b949350505050565b60008115159050919050565b61095b81610946565b811461096657600080fd5b50565b60008151905061097881610952565b92915050565b600080fd5b60008151905061099281610675565b92915050565b6109a1816104d5565b81146109ac57600080fd5b50565b6000815190506109be81610998565b92915050565b6000815190506109d3816106af565b92915050565b6109e28161081a565b81146109ed57600080fd5b50565b6000815190506109ff816109d9565b92915050565b600060e08284031215610a1b57610a1a61097e565b5b610a2560e06105a0565b90506000610a3584828501610983565b6000830152506020610a49848285016109af565b6020830152506040610a5d848285016109af565b6040830152506060610a71848285016109af565b6060830152506080610a85848285016109c4565b60808301525060a0610a9984828501610983565b60a08301525060c0610aad848285016109f0565b60c08301525092915050565b6000806101008385031215610ad157610ad06104ab565b5b6000610adf85828601610969565b9250506020610af085828601610a05565b9150509250929050565b610b03816106a1565b82525050565b600060e082019050610b1e600083018a6108bb565b610b2b6020830189610891565b610b386040830188610891565b610b456060830187610891565b610b526080830186610afa565b610b5f60a08301856108bb565b610b6c60c0830184610891565b98975050505050505050565b600060c082019050610b8d60008301896108bb565b610b9a6020830188610891565b610ba76040830187610891565b610bb46060830186610afa565b610bc160808301856108bb565b610bce60a0830184610891565b979650505050505050565b6000604082019050610bee6000830185610891565b610bfb60208301846108bb565b9392505050565b600082825260208201905092915050565b7f437265617465323a20696e73756666696369656e742062616c616e6365000000600082015250565b6000610c49601d83610c02565b9150610c5482610c13565b602082019050919050565b60006020820190508181036000830152610c7881610c3c565b9050919050565b7f437265617465323a2062797465636f6465206c656e677468206973207a65726f600082015250565b6000610cb5602083610c02565b9150610cc082610c7f565b602082019050919050565b60006020820190508181036000830152610ce481610ca8565b9050919050565b7f437265617465323a204661696c6564206f6e206465706c6f7900000000000000600082015250565b6000610d21601983610c02565b9150610d2c82610ceb565b602082019050919050565b60006020820190508181036000830152610d5081610d14565b905091905056fea2646970667358221220152d6b5fb63bc01643ab11f094db13537ec2bb3f6334c6c76deb304e2e4e434364736f6c634300080d0033";

type ContractDeployerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractDeployerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractDeployer__factory extends ContractFactory {
  constructor(...args: ContractDeployerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractDeployer> {
    return super.deploy(
      initRegistry,
      overrides || {}
    ) as Promise<ContractDeployer>;
  }
  override getDeployTransaction(
    initRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initRegistry, overrides || {});
  }
  override attach(address: string): ContractDeployer {
    return super.attach(address) as ContractDeployer;
  }
  override connect(signer: Signer): ContractDeployer__factory {
    return super.connect(signer) as ContractDeployer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractDeployerInterface {
    return new utils.Interface(_abi) as ContractDeployerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractDeployer {
    return new Contract(address, _abi, signerOrProvider) as ContractDeployer;
  }
}
