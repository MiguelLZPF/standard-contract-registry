/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ExampleOwnerV2,
  ExampleOwnerV2Interface,
} from "../../../contracts/Example_Owner_V2.sol/ExampleOwnerV2";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newFunction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73560405160405180910390a36103c0806100de6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631b28d63e14610046578063893d20e814610064578063a6f9dae114610082575b600080fd5b61004e61009e565b60405161005b9190610238565b60405180910390f35b61006c6100a6565b6040516100799190610294565b60405180910390f35b61009c600480360381019061009791906102e0565b6100cf565b005b600042905090565b60008060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461015f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101569061036a565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73560405160405180910390a380600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000819050919050565b6102328161021f565b82525050565b600060208201905061024d6000830184610229565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061027e82610253565b9050919050565b61028e81610273565b82525050565b60006020820190506102a96000830184610285565b92915050565b600080fd5b6102bd81610273565b81146102c857600080fd5b50565b6000813590506102da816102b4565b92915050565b6000602082840312156102f6576102f56102af565b5b6000610304848285016102cb565b91505092915050565b600082825260208201905092915050565b7f43616c6c6572206973206e6f74206f776e657200000000000000000000000000600082015250565b600061035460138361030d565b915061035f8261031e565b602082019050919050565b6000602082019050818103600083015261038381610347565b905091905056fea26469706673582212209940712ddbc4990dc8ff300b0acf1288bbdab70d2ec5b52cc16c680c12ff7c1f64736f6c634300080d0033";

type ExampleOwnerV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleOwnerV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleOwnerV2__factory extends ContractFactory {
  constructor(...args: ExampleOwnerV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ExampleOwnerV2> {
    return super.deploy(overrides || {}) as Promise<ExampleOwnerV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ExampleOwnerV2 {
    return super.attach(address) as ExampleOwnerV2;
  }
  override connect(signer: Signer): ExampleOwnerV2__factory {
    return super.connect(signer) as ExampleOwnerV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleOwnerV2Interface {
    return new utils.Interface(_abi) as ExampleOwnerV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExampleOwnerV2 {
    return new Contract(address, _abi, signerOrProvider) as ExampleOwnerV2;
  }
}
